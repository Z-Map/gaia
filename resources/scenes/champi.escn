[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.17341503500938416, 0.0754987969994545,
		0.5917913317680359, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.30000001192092896);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(0.800000011920929);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="ArrayMesh"]

resource_name = "champi"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0787673, 0.0134334, -1.01572e-09, 0.0300665, -0.0134334, -0.0300665, 0.0556969, 0.0134334, -0.0556969, 1.86727e-08, 0.0134334, 0.0787673, 0.0300665, -0.0134334, 0.0300665, 0.0556969, 0.0134334, 0.0556969, -0.0787673, 0.0134334, 3.36659e-09, -0.0300664, -0.0134334, 0.0300665, -0.0556969, 0.0134334, 0.0556969, 1.17867e-08, 0.0134334, -0.0787673, -0.0300664, -0.0134334, -0.0300665, -0.0556969, 0.0134334, -0.0556969, 1.52954e-08, -0.0134334, -0.0425204, 0.0425204, -0.0134334, -1.47694e-10, 1.90126e-08, -0.0134334, 0.0425204, -0.0425204, -0.0134334, 2.21798e-09, 0.0922158, 0.0485667, -1.18915e-09, 1.92372e-08, 0.0485667, 0.0922158, -0.0922158, 0.0485667, 3.9414e-09, 1.11754e-08, 0.0485667, -0.0922158, 0.0652064, 0.0485667, -0.0652064, 0.0652064, 0.0485667, 0.0652064, -0.0652064, 0.0485667, 0.0652064, -0.0652064, 0.0485667, -0.0652064, 0.0653106, 0.135037, -5.70472e-10, 1.79721e-08, 0.135037, 0.0653106, -0.0653106, 0.135037, 3.06317e-09, 1.22625e-08, 0.135037, -0.0653106, 0.0461816, 0.135037, -0.0461816, 0.0461816, 0.135037, 0.0461816, -0.0461816, 0.135037, 0.0461816, -0.0461816, 0.135037, -0.0461816, -0.0423671, 0.226865, -0.0423671, 0.0599162, 0.226865, -5.23353e-10, 1.88614e-08, 0.226865, 0.0599162, -0.0599162, 0.226865, 2.81016e-09, 1.36234e-08, 0.226865, -0.0599162, 0.0423672, 0.226865, -0.0423671, 0.0423672, 0.226865, 0.0423671, -0.0423671, 0.226865, 0.0423671, 1.36234e-08, 0.226865, -0.0599162, 0.135023, 0.241392, -0.135023, 0.0423672, 0.226865, -0.0423671, 0.0599162, 0.226865, -5.23353e-10, 0.135023, 0.241392, 0.135023, 0.0423672, 0.226865, 0.0423671, 1.88614e-08, 0.226865, 0.0599162, -0.135023, 0.241392, 0.135023, -0.0423671, 0.226865, 0.0423671, -0.0599162, 0.226865, 2.81016e-09, -0.135023, 0.241392, -0.135023, -0.0423671, 0.226865, -0.0423671, 0.0423672, 0.226865, -0.0423671, 0.190952, 0.241392, -1.66792e-09, 0.0599162, 0.226865, -5.23353e-10, 0.0423672, 0.226865, 0.0423671, 2.24306e-08, 0.241392, 0.190952, 1.88614e-08, 0.226865, 0.0599162, -0.0423671, 0.226865, 0.0423671, -0.190952, 0.241392, 8.95593e-09, -0.0599162, 0.226865, 2.81016e-09, -0.0423671, 0.226865, -0.0423671, 5.73702e-09, 0.241392, -0.190952, 1.36234e-08, 0.226865, -0.0599162, -0.135023, 0.241392, 0.135023, -0.209199, 0.235456, 9.81175e-09, -0.190952, 0.241392, 8.95593e-09, -0.135023, 0.241392, -0.135023, 3.9289e-09, 0.235456, -0.209199, 5.73702e-09, 0.241392, -0.190952, 0.147926, 0.235456, -0.147926, 0.135023, 0.241392, -0.135023, 0.190952, 0.241392, -1.66792e-09, 0.147926, 0.235456, 0.147926, 0.135023, 0.241392, 0.135023, 2.24306e-08, 0.241392, 0.190952, -0.147926, 0.235456, 0.147926, -0.147926, 0.235456, -0.147926, 0.209199, 0.235456, -1.8273e-09, 2.22177e-08, 0.235456, 0.209199, 0.233999, 0.244258, -2.04393e-09, 2.18386e-08, 0.244258, 0.234, -0.234, 0.244258, 1.09749e-08, 1.38174e-09, 0.244258, -0.234, 0.165463, 0.244258, -0.165463, 0.165463, 0.244258, 0.165463, -0.165463, 0.244258, 0.165463, -0.165463, 0.244258, -0.165463, -0.174347, 0.274019, 0.174347, -0.174347, 0.274019, -0.174347, 0.246564, 0.274019, -2.15367e-09, 2.24112e-08, 0.274019, 0.246564, -0.246564, 0.274019, 1.15642e-08, 8.55849e-10, 0.274019, -0.246564, 0.174347, 0.274019, -0.174347, 0.174347, 0.274019, 0.174347, 0.165991, 0.315683, -0.165991, 0.165991, 0.315683, 0.165991, -0.165991, 0.315683, 0.165991, -0.165991, 0.315683, -0.165991, 0.234747, 0.315683, -2.05045e-09, 2.16941e-08, 0.315683, 0.234747, -0.234747, 0.315683, 1.101e-08, 1.17192e-09, 0.315683, -0.234747, 1.41538e-08, 0.343955, 0.153155, -0.153155, 0.343955, 7.18318e-09, 7.64589e-10, 0.343955, -0.153155, 0.108297, 0.343955, -0.108297, 0.108297, 0.343955, 0.108297, -0.108297, 0.343955, 0.108297, -0.108297, 0.343955, -0.108297, 0.153155, 0.343955, -1.33777e-09, 0.0459739, 0.358835, -1.70509e-09, 1.64165e-09, 0.358835, 0.0459739, -0.0459739, 0.358835, 8.52729e-10, -2.37752e-09, 0.358835, -0.0459739, 0.0325085, 0.358835, -0.0325085, 0.0325085, 0.358835, 0.0325085, -0.0325085, 0.358835, 0.0325085, -0.0325085, 0.358835, -0.0325085, 0.00178192, 0.360219, 0.00178192, -0.00178192, 0.360219, 0.00178192, -0.00178192, 0.360219, -0.00178192, 0.00252001, 0.360219, -9.73736e-10, -2.55083e-09, 0.360219, 0.00252001, -0.00252002, 0.360219, -8.33531e-10, -2.77114e-09, 0.360219, -0.00252002, 0.00178192, 0.360219, -0.00178192, 1.36234e-08, 0.226865, -0.0599162, 5.73702e-09, 0.241392, -0.190952, 0.135023, 0.241392, -0.135023, 0.0599162, 0.226865, -5.23353e-10, 0.190952, 0.241392, -1.66792e-09, 0.135023, 0.241392, 0.135023, 1.88614e-08, 0.226865, 0.0599162, 2.24306e-08, 0.241392, 0.190952, -0.135023, 0.241392, 0.135023, -0.0599162, 0.226865, 2.81016e-09, -0.190952, 0.241392, 8.95593e-09, -0.135023, 0.241392, -0.135023, 0.0423672, 0.226865, -0.0423671, 0.135023, 0.241392, -0.135023, 0.190952, 0.241392, -1.66792e-09, 0.0423672, 0.226865, 0.0423671, 0.135023, 0.241392, 0.135023, 2.24306e-08, 0.241392, 0.190952, -0.0423671, 0.226865, 0.0423671, -0.135023, 0.241392, 0.135023, -0.190952, 0.241392, 8.95593e-09, -0.0423671, 0.226865, -0.0423671, -0.135023, 0.241392, -0.135023, 5.73702e-09, 0.241392, -0.190952),
		Vector3Array(0.819178, -0.573534, 0.0, 0.26896, -0.924802, -0.26896, 0.579241, -0.573534, -0.579241, 0.0, -0.573534, 0.819178, 0.26896, -0.924802, 0.26896, 0.579241, -0.573534, 0.579241, -0.819178, -0.573534, 0.0, -0.26896, -0.924802, 0.26896, -0.579241, -0.573534, 0.579241, 0.0, -0.573534, -0.819178, -0.26896, -0.924802, -0.26896, -0.579241, -0.573534, -0.579241, 0.0, -0.924802, -0.380383, 0.380383, -0.924802, 0.0, 0.0, -0.924802, 0.380383, -0.380383, -0.924802, 0.0, 0.999542, -0.029664, 0.0, 0.0, -0.029664, 0.999542, -0.999542, -0.029664, 0.0, 0.0, -0.029664, -0.999542, 0.706778, -0.029664, -0.706778, 0.706778, -0.029664, 0.706778, -0.706778, -0.029664, 0.706778, -0.706778, -0.029664, -0.706778, 0.982788, 0.184606, 0.0, 0.0, 0.184606, 0.982788, -0.982788, 0.184606, 0.0, 0.0, 0.184606, -0.982788, 0.694937, 0.184606, -0.694937, 0.694937, 0.184606, 0.694937, -0.694937, 0.184606, 0.694937, -0.694937, 0.184606, -0.694937, -0.474715, -0.741081, -0.474746, 0.671377, -0.741081, 0.0, 0.0, -0.741081, 0.671377, -0.671377, -0.741081, 0.0, 0.0, -0.741081, -0.671377, 0.474746, -0.741081, -0.474746, 0.474746, -0.741081, 0.474746, -0.474746, -0.741081, 0.474746, 0.0455941, -0.992877, -0.110072, 0.0455941, -0.992877, -0.110072, 0.0455941, -0.992877, -0.110072, 0.110071, -0.992877, 0.0455933, 0.110071, -0.992877, 0.0455933, 0.110071, -0.992877, 0.0455933, -0.0455941, -0.992877, 0.110072, -0.0455941, -0.992877, 0.110072, -0.0455941, -0.992877, 0.110072, -0.11007, -0.992877, -0.0455934, -0.11007, -0.992877, -0.0455934, -0.11007, -0.992877, -0.0455934, 0.110072, -0.992877, -0.0455933, 0.110072, -0.992877, -0.0455933, 0.110072, -0.992877, -0.0455933, 0.0455934, -0.992877, 0.110072, 0.0455934, -0.992877, 0.110072, 0.0455934, -0.992877, 0.110072, -0.110072, -0.992877, 0.0455934, -0.110072, -0.992877, 0.0455934, -0.110072, -0.992877, 0.0455934, -0.0455935, -0.992877, -0.110072, -0.0455935, -0.992877, -0.110072, -0.0455935, -0.992877, -0.110072, 0.108402, -0.988159, -0.108402, -0.0930815, -0.995636, 0.0, 0.153325, -0.988159, 0.0, 0.108402, -0.988159, 0.108402, 0.0, -0.995636, -0.0930815, 0.0, -0.988159, 0.153325, 0.0657979, -0.995636, -0.0657979, -0.108402, -0.988159, 0.108402, -0.153325, -0.988159, 0.0, 0.0657979, -0.995636, 0.0657979, -0.108402, -0.988159, -0.108402, 0.0, -0.988159, -0.153325, -0.0657979, -0.995636, 0.0657979, -0.0657979, -0.995636, -0.0657979, 0.0930815, -0.995636, 0.0, 0.0, -0.995636, 0.0930815, 0.732322, -0.680929, 0.0, 0.0, -0.680929, 0.732322, -0.732322, -0.680929, 0.0, 0.0, -0.680929, -0.732322, 0.517808, -0.680929, -0.517808, 0.517808, -0.680929, 0.517808, -0.517808, -0.680929, 0.517808, -0.517808, -0.680929, -0.517808, -0.705924, -0.0570696, 0.705924, -0.705924, -0.0570696, -0.705924, 0.998352, -0.0570696, 0.0, 0.0, -0.0570696, 0.998352, -0.998352, -0.0570696, 0.0, 0.0, -0.0570696, -0.998352, 0.705954, -0.0570696, -0.705924, 0.705924, -0.0570696, 0.705924, 0.546525, 0.63451, -0.546525, 0.546525, 0.63451, 0.546525, -0.546525, 0.63451, 0.546525, -0.546525, 0.63451, -0.546525, 0.772912, 0.63451, 0.0, 0.0, 0.63451, 0.772912, -0.772912, 0.63451, 0.0, 0.0, 0.63451, -0.772912, 0.0, 0.966582, 0.256325, -0.256325, 0.966582, 0.0, 0.0, 0.966582, -0.256325, 0.181249, 0.966582, -0.181249, 0.181249, 0.966582, 0.181249, -0.181249, 0.966582, 0.181249, -0.181249, 0.966582, -0.181249, 0.256325, 0.966582, 0.0, 0.0979034, 0.995178, 0.0, 0.0, 0.995178, 0.0979034, -0.0979034, 0.995178, 0.0, 0.0, 0.995178, -0.0979034, 0.069216, 0.995178, -0.069216, 0.069216, 0.995178, 0.069216, -0.069216, 0.995178, 0.069216, -0.069216, 0.995178, -0.069216, 0.014069, 0.999786, 0.014069, -0.014069, 0.999786, 0.014069, -0.014069, 0.999786, -0.014069, 0.0198981, 0.999786, 0.0, 0.0, 0.999786, 0.0198981, -0.0198981, 0.999786, 0.0, 0.0, 0.999786, -0.0198981, 0.014069, 0.999786, -0.014069, 0.0455932, -0.992877, -0.110072, 0.0455932, -0.992877, -0.110072, 0.0455932, -0.992877, -0.110072, 0.110072, -0.992877, 0.0455933, 0.110072, -0.992877, 0.0455933, 0.110072, -0.992877, 0.0455933, -0.0455932, -0.992877, 0.110072, -0.0455932, -0.992877, 0.110072, -0.0455932, -0.992877, 0.110072, -0.110072, -0.992877, -0.0455934, -0.110072, -0.992877, -0.0455934, -0.110072, -0.992877, -0.0455934, 0.110072, -0.992877, -0.0455933, 0.110072, -0.992877, -0.0455933, 0.110072, -0.992877, -0.0455933, 0.0455934, -0.992877, 0.110072, 0.0455934, -0.992877, 0.110072, 0.0455934, -0.992877, 0.110072, -0.110072, -0.992877, 0.0455934, -0.110072, -0.992877, 0.0455934, -0.110072, -0.992877, 0.0455934, -0.0455934, -0.992877, -0.110072, -0.0455934, -0.992877, -0.110072, -0.0455934, -0.992877, -0.110072),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 2, 9, 12, 5, 0, 13, 8, 3, 14, 11, 6, 15, 2, 0, 16, 5, 3, 17, 8, 6, 18, 11, 9, 19, 9, 2, 20, 0, 5, 21, 3, 8, 22, 6, 11, 23, 20, 16, 24, 21, 17, 25, 22, 18, 26, 23, 19, 27, 19, 20, 28, 16, 21, 29, 17, 22, 30, 18, 23, 31, 26, 31, 32, 28, 24, 33, 29, 25, 34, 30, 26, 35, 31, 27, 36, 27, 28, 37, 24, 29, 38, 25, 30, 39, 40, 42, 41, 43, 45, 44, 46, 48, 47, 49, 51, 50, 52, 54, 53, 55, 57, 56, 58, 60, 59, 61, 63, 62, 64, 66, 65, 67, 69, 68, 69, 71, 70, 72, 74, 73, 75, 64, 76, 66, 67, 77, 71, 72, 78, 74, 75, 79, 70, 78, 80, 73, 79, 81, 76, 65, 82, 77, 68, 83, 68, 70, 84, 78, 73, 85, 79, 76, 86, 65, 77, 87, 81, 86, 88, 82, 87, 89, 84, 80, 90, 85, 81, 91, 86, 82, 92, 87, 83, 93, 83, 84, 94, 80, 85, 95, 93, 94, 96, 90, 95, 97, 91, 88, 98, 92, 89, 99, 94, 90, 100, 95, 91, 101, 88, 92, 102, 89, 93, 103, 97, 101, 104, 98, 102, 105, 99, 103, 106, 103, 96, 107, 100, 97, 108, 101, 98, 109, 102, 99, 110, 96, 100, 111, 107, 111, 112, 108, 104, 113, 109, 105, 114, 110, 106, 115, 106, 107, 116, 111, 108, 117, 104, 109, 118, 105, 110, 119, 112, 117, 120, 113, 118, 121, 114, 119, 122, 116, 112, 123, 117, 113, 124, 118, 114, 125, 119, 115, 126, 115, 116, 127, 125, 123, 124, 126, 125, 122, 125, 124, 121, 124, 123, 120, 123, 126, 127, 126, 123, 125, 7, 13, 15, 15, 13, 10, 10, 13, 12, 12, 13, 1, 13, 14, 4, 14, 13, 7, 0, 1, 13, 3, 4, 14, 6, 7, 15, 9, 10, 12, 2, 12, 1, 5, 13, 4, 8, 14, 7, 11, 15, 10, 2, 16, 20, 5, 17, 21, 8, 18, 22, 11, 19, 23, 9, 20, 19, 0, 21, 16, 3, 22, 17, 6, 23, 18, 20, 24, 28, 21, 25, 29, 22, 26, 30, 23, 27, 31, 19, 28, 27, 16, 29, 24, 17, 30, 25, 18, 31, 26, 26, 32, 35, 28, 33, 37, 29, 34, 38, 30, 35, 39, 31, 36, 32, 27, 37, 36, 24, 38, 33, 25, 39, 34, 128, 130, 129, 131, 133, 132, 134, 136, 135, 137, 139, 138, 140, 142, 141, 143, 145, 144, 146, 148, 147, 149, 151, 150, 64, 65, 76, 67, 68, 77, 69, 70, 68, 72, 73, 78, 75, 76, 79, 66, 77, 65, 71, 78, 70, 74, 79, 73, 70, 80, 84, 73, 81, 85, 76, 82, 86, 77, 83, 87, 68, 84, 83, 78, 85, 80, 79, 86, 81, 65, 87, 82, 81, 88, 91, 82, 89, 92, 84, 90, 94, 85, 91, 95, 86, 92, 88, 87, 93, 89, 83, 94, 93, 80, 95, 90, 93, 96, 103, 90, 97, 100, 91, 98, 101, 92, 99, 102, 94, 100, 96, 95, 101, 97, 88, 102, 98, 89, 103, 99, 97, 104, 108, 98, 105, 109, 99, 106, 110, 103, 107, 106, 100, 108, 111, 101, 109, 104, 102, 110, 105, 96, 111, 107, 107, 112, 116, 108, 113, 117, 109, 114, 118, 110, 115, 119, 106, 116, 115, 111, 117, 112, 104, 118, 113, 105, 119, 114, 112, 120, 123, 113, 121, 124, 114, 122, 125, 116, 123, 127, 117, 124, 120, 118, 125, 121, 119, 126, 122, 115, 127, 126)
	],
	"morph_arrays":[]
}

[sub_resource id=4 type="ArrayMesh"]

resource_name = "Circle"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.0390803, 0.20381, 0.0147507, -0.0382419, -0.00498227, 0.0379171, -0.0161108, -0.00136625, 0.0210488, -0.13039, 0.183801, 0.0391329, -0.0809969, -0.0185628, 0.0119186, -0.0651186, -0.0121053, 0.0341352, -0.151737, 0.168026, -0.0537534, -0.0544445, -0.016956, -0.0325867, -0.0765755, -0.0205721, -0.0157185, -0.110503, 0.174763, -0.0851819, -0.0275678, -0.00983298, -0.0288049, -0.0308425, 0.200066, -0.0367422, -0.0116895, -0.00337548, -0.0065883, -0.0803144, 0.197072, 0.0461792, -0.159975, 0.171769, -0.00226051, -0.0604267, 0.188034, -0.0781357, -0.0698739, 0.0708765, -0.0182872, -0.0559048, 0.0753136, -0.0097929, -0.0645801, 0.0747886, 0.00474807, -0.0785492, 0.0703515, -0.00374624, -0.0610926, 0.0732038, -0.0170516, -0.0573493, 0.0759701, -0.000763182, -0.0733614, 0.0724614, 0.00351245, -0.0771046, 0.0696951, -0.012776, 0.0321931, 0.146537, 0.0295163, 0.0281959, -0.00369779, 0.0249801, 0.0234537, 0.000845008, 0.0060003, 0.0216225, 0.128915, 0.0955345, -0.00169183, -0.0110214, 0.0457222, 0.0177803, -0.00861304, 0.0414334, -0.046559, 0.12724, 0.0841703, -0.0235561, -0.00496935, 0.0163543, -0.0188139, -0.00951216, 0.035334, -0.0553946, 0.135704, 0.0488076, -0.0131405, -5.41098e-05, -9.90554e-05, 0.000291617, 0.149349, 0.0101614, 0.00633163, 0.00235428, -0.00438781, 0.0410287, 0.138073, 0.064879, -0.0146575, 0.124428, 0.103525, -0.0359884, 0.144862, 0.0181521, -0.00613312, 0.0292483, 0.028278, 0.00100866, 0.0309983, 0.0233216, 0.00623321, 0.0295521, 0.0303392, -0.000908573, 0.0278021, 0.0352956, -0.00364427, 0.0304228, 0.0243464, 0.00510005, 0.0306376, 0.0258039, 0.00374436, 0.0283776, 0.0342707, -0.00499996, 0.0281628, 0.0328133, 0.0518684, 0.126389, -0.0858086, 0.0362996, -0.0106693, -0.0259788, 0.0206566, -0.0101735, -0.0385649, 0.0856763, 0.131349, -0.0256996, 0.0266979, -0.00255021, 0.00893589, 0.038802, -0.00751162, -0.00630335, 0.0265687, 0.147782, 0.00618921, -0.00856507, 0.0018044, -0.00177414, 0.00707787, 0.00130861, 0.0108119, -0.00257687, 0.148706, -0.0172609, -0.0110675, -0.00135325, -0.0214496, 0.0153127, 0.133579, -0.0823132, 0.00103656, -0.00631465, -0.0366888, 0.0810139, 0.125465, -0.0623585, 0.0631244, 0.140593, 0.00269379, -0.00723927, 0.142823, -0.0539198, 0.0139856, 0.0341467, -0.0171257, 0.0167551, 0.0318048, -0.0271966, 0.0269265, 0.0305488, -0.0241074, 0.024157, 0.0328907, -0.0140364, 0.0132638, 0.0332359, -0.0228009, 0.0224144, 0.0306918, -0.0277377, 0.0276483, 0.0314596, -0.0184321, 0.0184977, 0.0340037, -0.0134953),
		Vector3Array(0.189734, 0.97055, 0.148228, 0.293527, -0.877499, 0.379192, 0.466292, -0.849269, 0.247536, -0.458571, 0.828486, 0.32136, -0.0401624, -0.98352, 0.176244, 0.0837428, -0.933103, 0.349681, -0.610157, 0.716453, -0.338145, 0.167058, -0.970977, -0.171087, -0.00564592, -0.999176, -0.0394299, -0.317362, 0.764306, -0.561327, 0.376843, -0.915372, -0.141575, 0.248238, 0.943968, -0.217353, 0.500809, -0.864956, 0.0318003, -0.103, 0.922727, 0.37138, -0.668661, 0.743034, 0.0274667, 0.0381787, 0.858547, -0.511277, 0.197424, 0.253121, 0.94705, -0.963561, -0.115665, 0.241066, -0.242531, -0.0720542, -0.967437, 0.918455, 0.296731, -0.261452, -0.532395, 0.0596637, 0.844356, -0.843501, -0.170232, -0.509384, 0.487289, 0.121372, -0.864742, 0.798395, 0.351299, 0.488998, 0.307749, 0.950865, -0.0331431, 0.438002, -0.883541, -0.165685, 0.368755, -0.817194, -0.442946, 0.209571, 0.787194, 0.579943, 0.00146489, -0.990509, 0.137242, 0.285867, -0.955351, 0.0745872, -0.423627, 0.77163, 0.47441, -0.317881, -0.902127, -0.291696, -0.248604, -0.968474, -0.0144658, -0.505692, 0.850246, 0.14597, -0.165746, -0.830317, -0.532029, 0.011475, 0.976989, -0.212928, 0.118656, -0.795129, -0.594653, 0.389813, 0.87225, 0.295236, -0.127354, 0.745506, 0.654164, -0.325449, 0.935301, -0.138707, 0.988037, -0.0592059, 0.142369, -0.146702, -0.337291, 0.929868, -0.976806, -0.107517, -0.185095, 0.157903, 0.170537, -0.972594, 0.592578, -0.245827, 0.767052, -0.796747, -0.279977, 0.535478, -0.581347, 0.0790735, -0.809778, 0.807978, 0.113254, -0.578204, 0.272011, 0.764, -0.58504, 0.144841, -0.989441, 0.000152593, -0.0690939, -0.982665, -0.171972, 0.585742, 0.809992, -0.027253, 0.0134892, -0.878414, 0.477706, 0.179052, -0.946257, 0.269265, 0.0372326, 0.962493, 0.268654, -0.468764, -0.818842, 0.331217, -0.25483, -0.825617, 0.503342, -0.233192, 0.971068, 0.0510269, -0.503006, -0.862026, 0.0621052, -0.0671712, 0.830714, -0.552599, -0.337443, -0.929868, -0.146306, 0.542497, 0.755425, -0.367443, 0.376476, 0.895779, 0.236213, -0.276467, 0.916471, -0.289132, 0.844844, -0.286935, -0.451491, 0.479415, 0.0220038, 0.877285, -0.862606, 0.18775, 0.46968, -0.497177, -0.12122, -0.859096, 0.940092, -0.166753, 0.297311, -0.267281, 0.168859, 0.948698, -0.957854, 0.067568, -0.279122, 0.249489, -0.268044, -0.930509),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		ColorArray(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0),
		Vector2Array(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 7, 10, 11, 12, 2, 13, 1, 5, 14, 4, 8, 15, 10, 12, 16, 9, 15, 17, 11, 0, 18, 13, 3, 19, 14, 6, 20, 15, 11, 21, 0, 13, 22, 3, 14, 23, 6, 9, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 31, 34, 35, 36, 26, 37, 25, 29, 38, 28, 32, 39, 34, 36, 40, 33, 39, 41, 35, 24, 42, 37, 27, 43, 38, 30, 44, 39, 35, 45, 24, 37, 46, 27, 38, 47, 30, 33, 48, 50, 49, 51, 53, 52, 54, 56, 55, 57, 55, 58, 59, 60, 50, 61, 49, 53, 62, 52, 56, 63, 58, 60, 64, 57, 63, 65, 59, 48, 66, 61, 51, 67, 62, 54, 68, 63, 59, 69, 48, 61, 70, 51, 62, 71, 54, 57, 36, 34, 44, 26, 36, 41, 25, 26, 45, 29, 25, 42, 28, 29, 46, 32, 28, 43, 31, 32, 47, 34, 31, 40, 60, 58, 68, 50, 60, 65, 49, 50, 69, 53, 49, 66, 52, 53, 70, 56, 52, 67, 55, 56, 71, 58, 55, 64, 12, 10, 20, 2, 12, 17, 1, 2, 21, 5, 1, 18, 4, 5, 22, 8, 4, 19, 7, 8, 23, 10, 7, 16, 0, 1, 13, 3, 4, 14, 6, 7, 9, 9, 10, 15, 11, 2, 0, 13, 5, 3, 14, 8, 6, 15, 12, 11, 16, 15, 20, 17, 0, 21, 18, 3, 22, 19, 6, 23, 20, 11, 17, 21, 13, 18, 22, 14, 19, 23, 9, 16, 24, 25, 37, 27, 28, 38, 30, 31, 33, 33, 34, 39, 35, 26, 24, 37, 29, 27, 38, 32, 30, 39, 36, 35, 40, 39, 44, 41, 24, 45, 42, 27, 46, 43, 30, 47, 44, 35, 41, 45, 37, 42, 46, 38, 43, 47, 33, 40, 48, 49, 61, 51, 52, 62, 54, 55, 57, 57, 58, 63, 59, 50, 48, 61, 53, 51, 62, 56, 54, 63, 60, 59, 64, 63, 68, 65, 48, 69, 66, 51, 70, 67, 54, 71, 68, 59, 65, 69, 61, 66, 70, 62, 67, 71, 57, 64, 36, 44, 41, 26, 41, 45, 25, 45, 42, 29, 42, 46, 28, 46, 43, 32, 43, 47, 31, 47, 40, 34, 40, 44, 60, 68, 65, 50, 65, 69, 49, 69, 66, 53, 66, 70, 52, 70, 67, 56, 67, 71, 55, 71, 64, 58, 64, 68, 12, 20, 17, 2, 17, 21, 1, 21, 18, 5, 18, 22, 4, 22, 19, 8, 19, 23, 7, 23, 16, 10, 16, 20)
	],
	"morph_arrays":[]
}
[node type="Spatial" name="Scene"]


[node name="lvl1" type="Spatial" parent="."]

transform = Transform(1.0, 0.0, 0.0, 0.0, 7.54979e-08, 1.0, 0.0, -1.0, 7.54979e-08, 0.0, 0.0, 0.0)

[node name="Champi1" type="MeshInstance" parent="lvl1"]

mesh = SubResource(3)
visible = true
transform = Transform(1.29677, 0.0, 0.0, 0.0, 9.79034e-08, -1.29677, 0.0, 1.29677, 9.79034e-08, 0.0450008, 0.330695, -0.0157698)

[node name="Champi2" type="MeshInstance" parent="lvl1"]

mesh = SubResource(3)
visible = true
transform = Transform(0.810639, -0.221262, -0.118053, -0.137336, -0.0574441, -0.835385, 0.209839, 0.817174, -0.090689, -0.476351, -0.347373, -0.0157698)

[node name="Champi3" type="MeshInstance" parent="lvl1"]

mesh = SubResource(3)
visible = true
transform = Transform(0.72837, 0.219155, -0.137683, -0.121532, -0.0734442, -0.759832, -0.228507, 0.737622, -0.0347485, 0.256478, -0.291454, -0.0157698)

[node name="Tube" type="MeshInstance" parent="lvl1"]

mesh = SubResource(4)
visible = true
transform = Transform(0.860156, -0.330418, -0.38853, -0.508326, -0.493155, -0.705977, 0.041662, 0.80475, -0.59215, 0.00447899, 0.210492, -0.00580473)

[node name="lvl2" type="Spatial" parent="."]

transform = Transform(1.0, 0.0, 0.0, 0.0, 7.54979e-08, 1.0, 0.0, -1.0, 7.54979e-08, 0.0, 0.0, 0.0)

[node name="Champi4" type="MeshInstance" parent="lvl2"]

mesh = SubResource(3)
visible = true
transform = Transform(0.836878, 0.10443, 0.283878, 0.286576, -0.00652824, -0.84243, -0.0967813, 0.88369, -0.0397709, 0.771351, 0.520772, -0.0256318)

[node name="Champi5" type="MeshInstance" parent="lvl2"]

mesh = SubResource(3)
visible = true
transform = Transform(0.71013, -0.227405, -0.00431836, -0.0973947, -0.291236, -0.679494, 0.205538, 0.647677, -0.30706, -0.0624085, -0.794806, -0.0256317)

[node name="Champi6" type="MeshInstance" parent="lvl2"]

mesh = SubResource(3)
visible = true
transform = Transform(0.638751, -0.00411051, 0.384704, 0.383896, 0.0557565, -0.636814, -0.0252554, 0.743566, 0.0498783, -0.677865, 0.608673, -0.0256318)
